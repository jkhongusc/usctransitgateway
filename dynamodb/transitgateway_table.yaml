AWSTemplateFormatVersion: '2010-09-09'
Description: A stack for creating a DynamoDB table to store transit gateway configurations
Parameters:
  TagAdmin:
    Type: String
    Default: jkhong
    Description: 'Tag: project admin (uid)'
  TagEnvironment:
    Type: String
    Default: Production
    Description: 'Tag: project environment enter - Development, Test, Staging, Production'
  TagOwner:
    Type: String
    Default: dcorley
    Description: 'Tag: project owner (uid)'
  TagProject:
    Type: String
    Default: transit-gateway-us-west-2
    Description: 'Tag: project'
Resources:
  DynamoDBTGWTable:
    Type: AWS::DynamoDB::Table
    Description: Transit Gateway table
    Properties:
      TableName: !Sub ${AWS::StackName}-table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: TransitGatewayId
          AttributeType: S
        - AttributeName: Cidr
          AttributeType: S
#        - AttributeName: VpcId
#          AttributeType: S
#        - AttributeName: Account
#          AttributeType: S
#        - AttributeName: Department
#          AttributeType: S
#        - AttributeName: OwnerEmail
#          AttributeType: S
#        - AttributeName: TechEmail
#          AttributeType: S
#        - AttributeName: Comments
#          AttributeType: S
#        - AttributeName: Description
#          AttributeType: S
#        - AttributeName: Data
#          AttributeType: S
      KeySchema:
        - AttributeName: TransitGatewayId
          KeyType: HASH
        - AttributeName: Cidr
          KeyType: RANGE
  TGWTableWritePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: TGWTableWrite
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Sid: ListAndDescribe
          Effect: Allow
          Action:
            - 'dynamodb:List*'
            - 'dynamodb:DescribeReservedCapacity*'
            - 'dynamodb:DescribeLimits'
            - 'dynamodb:DescribeTimeToLive'
          Resource: '*'
        - Sid: Write
          Effect: Allow
          Action:
            - 'dynamodb:BatchGet*'
            - 'dynamodb:DescribeStream'
            - 'dynamodb:DescribeTable'
            - 'dynamodb:Get*'
            - 'dynamodb:Query'
            - 'dynamodb:Scan'
            - 'dynamodb:BatchWrite*'
            - 'dynamodb:CreateTable'
            - 'dynamodb:Delete*'
            - 'dynamodb:Update*'
            - 'dynamodb:PutItem'
          Resource: !Sub 'arn:aws:dynamodb:*:*:table/${AWS::StackName}-table'
 
  TGWTableReadPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: TGWTableRead
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Sid: ListAndDescribe
          Effect: Allow
          Action:
            - 'dynamodb:List*'
            - 'dynamodb:DescribeReservedCapacity*'
            - 'dynamodb:DescribeLimits'
            - 'dynamodb:DescribeTimeToLive'
          Resource: '*'
        - Sid: ReadOnly
          Effect: Allow
          Action:
            - 'dynamodb:GetItem'
            - 'dynamodb:BatchGetItem'
            - 'dynamodb:Query'
            - 'dynamodb:Scan'
          Resource: !Sub 'arn:aws:dynamodb:*:*:table/${AWS::StackName}-table'
 
 
 
 
# These are the values output by the CloudFormation template. Be careful
# about changing any of them, because of them are exported with specific
# names so that the other task related CF templates can use them.
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  TableName:
    Description: 'DynamoDB Table name.'
    Value: !Ref DynamoDBTGWTable
    Export:
      Name: !Sub '${AWS::StackName}-table'
  WritePolicy:
    Description: 'DynamoDB write policy name.'
    Value: !Ref TGWTableWritePolicy
    Export:
      Name: !Sub '${AWS::StackName}-writepolicy'
  ReadPolicy:
    Description: 'DynamoDB read policy name.'
    Value: !Ref TGWTableReadPolicy
    Export:
      Name: !Sub '${AWS::StackName}-readpolicy'
